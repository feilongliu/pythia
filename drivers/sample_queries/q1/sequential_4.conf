path = "drivers/sample_queries/data";
buffsize = 1048576;

scanP: 
{
  type = "parallelscan";

  filetype = "text";
  files = ("pck");
  mapping = ( (0, 1, 2, 3) );
  schema = ( "long", "long" );
};

scanO: 
{
  type = "parallelscan";

  filetype = "text";
  files = ("oprk");
  mapping = ( (0, 1, 2, 3) );
  schema = ( "long", "long" );
};

scanL:
{
  type = "parallelscan";

  filetype = "text";
  files = ("opk");
  mapping = ( (0, 1, 2, 3) );
  schema = ( "long", "long" );
  verbose = "true";
};

joinP : 
{
  type = "hashjoin";

  hash : 
  {
    fn = "modulo";
    range = [ 1, 500000 ];
    buckets = 262144;
  };

  tuplesperbucket = 4;
  buildjattr = 0;
  probejattr = 1;

  projection = ( "P$0", "B$1" );

  threadgroups = ( [0, 1, 2, 3] );
  leftthreads = (0, 1, 2, 3 );
  allocpolicy = "striped";
};

joinO : 
{
  type = "hashjoin";

  hash : 
  {
    fn = "modulo";
    range = [ 1, 500000 ];
    buckets = 524288;
  };

  tuplesperbucket = 4;
  buildjattr = 0;
  probejattr = 0;

  projection = ( "B$1", "P$1" );

  threadgroups = ( [0, 1, 2, 3] );
  leftthreads = ( 0, 1, 2, 3);
  allocpolicy = "striped";
};

merge : 
{
  type = "merge";

  threads = 4;

  affinitize = (
    { threadid = 0; bindto = [0,0,0,0]; },
    { threadid = 1; bindto = [0,0,1,0]; },
	{ threadid = 2; bindto = [0,0,0,0]; },
    { threadid = 3; bindto = [0,0,1,0]; }
  );
};


cycleaccountant:
{
  type = "cycle_accountant";
};

treeroot:
{
  name: "cycleaccountant";
  input:
  {
    name: "merge";
    input:
    {
       name: "joinO";
       build:
       {
        name: "scanO";
       };
       probe:
       {
          name: "joinP";
          build:
          {
            name: "scanP";
          };
          probe:
          {
              name: "scanL";
           };
        };
    };
  };
};
